<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dummy = -10;
room_milli = floor(1000 / room_speed);

prog_cur = 0;
prog_max = 1;
prog_text = "";
processing = 0;
prog_vars[0] = 0;

output_file_name = "";
output_file_handle = -10;
output_format = 0;

input_file_name = "";
input_file_handle = -10;
input_file_lines = 0;
input_file_new = true;

load_file_directory = program_directory;
save_file_directory = program_directory;

player_data = ds_map_create();
player_names = ds_map_create();
player_names_inverse = ds_list_create();

weapon_names = ds_map_create();
weapon_names_inverse = ds_list_create();

codstatdata = ds_map_create();
ds_map_add_map(codstatdata,"player_data", player_data);
ds_map_add_list(codstatdata,"player_names", player_names_inverse);
ds_map_add_list(codstatdata,"weapon_names", weapon_names_inverse);

current_tab = 0;
is_merging = false;

var center_width = room_width/2;

button_data = ds_map_create();
button_count = 0;
scr_add_button("tab_import",4,4,60, 24, "Import", 0, true);
scr_add_button("tab_data",64,4,120, 24, "Data", 1, true);
//TAB 1 Buttons
scr_add_button("read_log_new",32,64,center_width - 16, 120, "Read Log (new)", 0, false);
scr_add_button("read_log_add",center_width+16,64,room_width - 32, 120, "Read Log (Add)", 0, false);

scr_add_button("write_readable",32,152,center_width - 16, 208, "Write (Readable)", 0, false);
scr_add_button("write_json",center_width+16,152,room_width - 32, 208, "Write (JSON)", 0, false);
//TAB 2 Buttons
scr_add_button("data_rename",center_width-24,40,center_width + 24, 72, "[...]", 1, false);
scr_add_button("data_merge",center_width-24,88,center_width + 24, 120, "2-&gt;1", 1, false);

draw_set_font(font0);
draw_set_valign(fa_center);
draw_set_halign(fa_center);

list_item_height = 24;
list_scrollbar_height = 64;
//0 - 3 x1 - y2
//4 = offset
//5 = max
//6 = selected
//7 = mouse highlighted
//8 = max items on screen
//9 = dragging scrollbar
list_left[0] = 16; list_left[1] = 40;
list_left[2] = center_width - 32; list_left[3] = room_height - 32;
list_left[4] = 0; list_left[5] = 0; list_left[6] = -1; list_left[7] = -10;
list_left[8] = floor((list_left[3] - list_left[1])/list_item_height);
list_left[9] = false;
list_left_data[0] = "";

list_right[0] = center_width+32; list_right[1] = 40;
list_right[2] = room_width-16; list_right[3] = room_height - 32;
list_right[4] = 0; list_right[5] = 0; list_right[6] = -1; list_right[7] = -10;
list_right[8] = floor((list_right[3] - list_right[1])/list_item_height);
list_right[9] = false;
list_right_data[0] = "";

//scr_fill_with_dummy_data(list_left, list_left_data);
//scr_fill_with_dummy_data(list_right, list_right_data);

scr_load_settings();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(list_left[7] == -1 || list_left[7] == -2)
    list_left[9] = 3;
if(list_right[7] == -1 || list_right[7] == -2)
    list_right[9] = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_check_buttons();
if(current_tab == 1){
    scr_check_list_cursor(list_left);
    scr_check_list_cursor(list_right);  
    scr_list_scroll(list_left);
    scr_list_scroll(list_right);
}

if(processing == 1) //Open the file
{
    input_file_lines = 0;
    input_file_handle = file_text_open_read(input_file_name);
    if(input_file_handle == -1)
    {
        show_message("Could not open file - " + input_file_name + " ");
        processing = 0;
    }
    else {
        scr_ini_load_file();
        processing = 2;
        prog_text = "Determining size";   
    }
}   
if(processing == 2) //Scan the number of lines
{
    var time = current_time;
    while(current_time - time &lt; room_milli &amp;&amp; !file_text_eof(input_file_handle))
    {
            var line = file_text_readln(input_file_handle);
            input_file_lines++;
    }
    time = current_time;
    if(file_text_eof(input_file_handle))
    {
        file_text_close(input_file_handle);
        input_file_handle = file_text_open_read(input_file_name);
        if(input_file_handle == -1)
        {
            show_message("Could not open file - " + input_file_name);
            processing = 0;
        }
        else {
            processing = 3;
            prog_text = "Processing";
            prog_max = min(input_file_lines,1);
            prog_cur = 0;
        }
    }
}
if(processing == 3) //Process the file
{
    var time = current_time;
    while(current_time - time &lt; room_milli &amp;&amp; !file_text_eof(input_file_handle))
    {
            var line = file_text_readln(input_file_handle);
            scr_process_line(line);
            prog_cur++;
    }
    if(file_text_eof(input_file_handle))
    {
        file_text_close(input_file_handle);
        processing = 0;
        prog_text = "File Loaded!";
        scr_fill_list_player_names(list_left, list_left_data);
    }
}
if(processing == 4) //setup calcute write to file duration
{
    //determine write size
    prog_max = 1;
    prog_cur = 0;
    prog_vars[0] = ds_map_find_first(player_data);
    prog_vars[1] = ds_map_size(player_data);
    prog_vars[2] = 0;
    processing = 5;
    prog_text = "Calculating write-to-file duration";
}
if(processing == 5) //calculate write to file duration
{
    var time = current_time;
    while(time - current_time &lt; room_milli &amp;&amp; prog_vars[2] &lt; prog_vars[1]){
        var list = player_data[? prog_vars[0]];
        prog_max += ds_map_size(list[? "kills"]);
        prog_max += ds_map_size(list[? "deaths"]);
        prog_max += ds_map_size(list[? "hitloc_inflict"]);
        prog_max += ds_map_size(list[? "hitloc_receive"]);
        prog_max += ds_map_size(list[? "weapons"]);
        prog_max += ds_map_size(list) - 5;
        prog_vars[0] = ds_map_find_next(player_data, prog_vars[0]);
        prog_vars[2]++;
    }
    if(prog_vars[2] &gt;= prog_vars[1])
        processing = 6;
}
if(processing == 6) //setup write to file
{
    prog_vars[0] = ds_map_find_first(player_data);
    prog_vars[1] = ds_map_size(player_data);
    prog_vars[2] = 0;
    if(output_format == 0)
        processing = 7;
    else
        processing = 8;
    prog_text = "Writing to file";
}
if(processing == 7) //write to file
{
    output_file_name = get_save_filename_ext("Raw text file|*.txt","", save_file_directory,"Save");
    output_file_handle = FS_file_text_open_write(output_file_name);
    if(output_file_handle == -1)
    {
        show_message("Could not open output file - " + output_file_name);
        processing = 0;
    }
    else{
        scr_ini_save_file();
        var time = current_time;
        while(current_time - time &lt; room_milli &amp;&amp; prog_vars[2] &lt; prog_vars[1])
        {
            var temp = prog_vars[0];
            scr_write_player_record(temp);
            prog_vars[0] = ds_map_find_next(player_data, prog_vars[0]);
            prog_vars[2]++;
        }
        if( prog_vars[2] &gt;= prog_vars[1] )
        {
            FS_file_text_close(output_file_handle);
            processing = 0;
            prog_text = "done!";
        }
    }
}
if(processing == 8)
{
    output_file_name = get_save_filename_ext("Raw text file|*.txt","", save_file_directory,"Save");
    output_file_handle = FS_file_text_open_write(output_file_name);
    if(output_file_handle == -1)
    {
        show_message("Could not open output file - " + output_file_name);
        processing = 0;
    } else {
        scr_ini_save_file();
        var dump = json_encode(codstatdata);
        FS_file_text_write_string(output_file_handle, dump); FS_file_text_writeln(output_file_handle);
        FS_file_text_close(output_file_handle);
        processing = 0;
        prog_text = "done!";
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(current_tab == 1)
{
    if(point_in_rectangle(mouse_x, mouse_y, list_left[0], list_left[1], list_left[2], list_left[3])){
        if(list_left[4] &lt;= list_left[5]-list_left[8])
            list_left[4]++;
    } else if(point_in_rectangle(mouse_x, mouse_y, list_right[0], list_right[1], list_right[2], list_right[3])){
        if(list_right[4] &lt;= list_right[5]-list_right[8])
            list_right[4]++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(current_tab == 1)
{
    if(point_in_rectangle(mouse_x, mouse_y, list_left[0], list_left[1], list_left[2], list_left[3])){
        if(list_left[4] &gt; 0)
            list_left[4]--;
    } else if(point_in_rectangle(mouse_x, mouse_y, list_right[0], list_right[1], list_right[2], list_right[3])){
        if(list_right[4] &gt; 0)
            list_right[4]--;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>list_left[9] = false;
list_right[9] = false;
alarm[0] = -1;

scr_check_button_clicks();
if(current_tab == 1){
    if( scr_click_list(list_left, true) &amp;&amp; list_left[6] &gt;= 0 &amp;&amp; list_left[6] &lt; list_left[5]){
        scr_fill_list_player_data(list_right, list_right_data, list_left[6]);
    }
    scr_click_list(list_right, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Manage the scroll bars
if(current_tab == 1){
    scr_click_list_scrollbar(list_left);
    scr_click_list_scrollbar(list_right);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_line(0,24,room_width,24);
scr_draw_buttons();

if(current_tab == 0){
    scr_draw_progress_bar(16, room_height - 96, room_width-16, room_height-32, prog_cur, prog_max, prog_text, processing == 3 || processing &gt; 5);
}
if(current_tab == 1){
    scr_draw_list(list_left, list_left_data);
    scr_draw_list(list_right, list_right_data);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
